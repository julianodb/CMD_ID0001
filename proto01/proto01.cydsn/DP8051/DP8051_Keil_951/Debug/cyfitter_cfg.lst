C51 COMPILER V9.51   CYFITTER_CFG                                                          02/11/2014 14:11:28 PAGE 1   


C51 COMPILER V9.51, COMPILATION OF MODULE CYFITTER_CFG
OBJECT MODULE PLACED IN .\DP8051\DP8051_Keil_951\Debug\cyfitter_cfg.obj
COMPILER INVOKED BY: C:\Program Files\Cypress\PSoC Creator\3.0\PSoC Creator\import\keil\pk51\9.51\C51\BIN\c51.exe .\Gene
                    -rated_Source\PSoC3\cyfitter_cfg.c NOIV LARGE MODDP2 OMF2 VB(1) PR(.\DP8051\DP8051_Keil_951\Debug\cyfitter_cfg.lst) CD DB
                    - NOIP OT(2,SIZE) DF(DEBUG) INCDIR(.,.\Generated_Source\PSoC3) OJ(.\DP8051\DP8051_Keil_951\Debug\cyfitter_cfg.obj)

line level    source

   1          /*******************************************************************************
   2          * FILENAME: cyfitter_cfg.c
   3          * PSoC Creator 3.0 Component Pack 7
   4          *
   5          * Description:
   6          * This file is automatically generated by PSoC Creator with device 
   7          * initialization code.  Except for the user defined sections in
   8          * CyClockStartupError(), this file should not be modified.
   9          *
  10          ********************************************************************************
  11          * Copyright 2013, Cypress Semiconductor Corporation.  All rights reserved.
  12          * You may use this file only in accordance with the license, terms, conditions, 
  13          * disclaimers, and limitations in the end user license agreement accompanying 
  14          * the software package with which this file was provided.
  15          ********************************************************************************/
  16          
  17          #include <string.h>
  18          #include <cytypes.h>
  19          #include <cydevice_trm.h>
  20          #include <cyfitter.h>
  21          #include <CyLib.h>
  22          #include <cyfitter_cfg.h>
  23          
  24          #define CY_NEED_CYCLOCKSTARTUPERROR 1
  25          
  26          
  27          #if defined(__C51__) || defined(__CX51__)
  28                  #define CYPACKED
  29                  #define CYPACKED_ATTR
  30                  #define CYALIGNED
  31                  
  32              #define CY_CFG_UNUSED
  33                  #define CY_CFG_MEMORY_BARRIER() do { } while (0)
  34          
  35          
  36          
  37                  #define CYMEMZERO(a,c) cymemzero((a),(c))
  38                  #define CYCONFIGCPY(d,s,c) cyconfigcpy((c),(s),(d))
  39                  #define CYCONFIGCPYCODE(d,s,c) cyconfigcpycode((c),(s),(d))
  40          #else
                      #error Unsupported toolchain
              #endif
  43          
  44          
  45          
  46          /* Clock startup error codes                                                   */
  47          #define CYCLOCKSTART_NO_ERROR    0u
  48          #define CYCLOCKSTART_XTAL_ERROR  1u
  49          #define CYCLOCKSTART_32KHZ_ERROR 2u
  50          #define CYCLOCKSTART_PLL_ERROR   3u
  51          
  52          #ifdef CY_NEED_CYCLOCKSTARTUPERROR
  53          /*******************************************************************************
C51 COMPILER V9.51   CYFITTER_CFG                                                          02/11/2014 14:11:28 PAGE 2   

  54          * Function Name: CyClockStartupError
  55          ********************************************************************************
  56          * Summary:
  57          *  If an error is encountered during clock configuration (crystal startup error,
  58          *  PLL lock error, etc.), the system will end up here.  Unless reimplemented by
  59          *  the customer, this function will stop in an infinite loop.
  60          *
  61          * Parameters:
  62          *   void
  63          *
  64          * Return:
  65          *   void
  66          *
  67          *******************************************************************************/
  68          CY_CFG_UNUSED
  69          static void CyClockStartupError(uint8 errorCode);
  70          CY_CFG_UNUSED
  71          static void CyClockStartupError(uint8 errorCode)
  72          {
  73   1          /* To remove the compiler warning if errorCode not used.                */
  74   1          errorCode = errorCode;
  75   1      
  76   1          /* `#START CyClockStartupError` */
  77   1      
  78   1          /* If we have a clock startup error (bad MHz crystal, PLL lock, etc.),  */
  79   1          /* we will end up here to allow the customer to implement something to  */
  80   1          /* deal with the clock condition.                                       */
  81   1      
  82   1          /* `#END` */
  83   1      
  84   1          /* If nothing else, stop here since the clocks have not started         */
  85   1          /* correctly.                                                           */
  86   1          while(1) {}
  87   1      }
  88          #endif
  89          
  90          #define cfg_byte_table ((const void CYFAR *)0x080000u)
  91          /* IOPINS0_0 Address: CYREG_PRT0_DM0 Size (bytes): 8 */
  92          #define BS_IOPINS0_0_VAL ((const uint8 CYFAR *)0x0008007Cu)
  93          
  94          /* IOPINS0_2 Address: CYREG_PRT2_DM0 Size (bytes): 8 */
  95          #define BS_IOPINS0_2_VAL ((const uint8 CYFAR *)0x00080084u)
  96          
  97          /* CYDEV_CLKDIST_ACFG0_CFG0 Address: CYREG_CLKDIST_ACFG0_CFG0 Size (bytes): 4 */
  98          #define BS_CYDEV_CLKDIST_ACFG0_CFG0_VAL ((const uint8 CYFAR *)0x0008008Cu)
  99          
 100          
 101          /*******************************************************************************
 102          * Function Name: ClockSetup
 103          ********************************************************************************
 104          *
 105          * Summary:
 106          *  Performs the initialization of all of the clocks in the device based on the
 107          *  settings in the Clock tab of the DWR.  This includes enabling the requested
 108          *  clocks and setting the necessary dividers to produce the desired frequency. 
 109          *
 110          * Parameters:
 111          *  void
 112          *
 113          * Return:
 114          *  void
 115          *
C51 COMPILER V9.51   CYFITTER_CFG                                                          02/11/2014 14:11:28 PAGE 3   

 116          *******************************************************************************/
 117          static void ClockSetup(void);
 118          static void ClockSetup(void)
 119          {
 120   1              uint32 timeout;
 121   1              uint8 pllLock;
 122   1      
 123   1      
 124   1              /* Configure Digital Clocks based on settings from Clock DWR */
 125   1              CY_SET_XTND_REG16((void CYFAR *)(CYREG_CLKDIST_DCFG0_CFG0), 0x0000u);
 126   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_DCFG0_CFG0 + 0x2u), 0x50u);
 127   1      
 128   1              /* Configure Analog Clocks based on settings from Clock DWR */
 129   1              CYCONFIGCPY((void CYFAR *)(CYREG_CLKDIST_ACFG0_CFG0), (const void CYFAR *)(BS_CYDEV_CLKDIST_ACFG0_CFG0_VA
             -L), 4u);
 130   1      
 131   1              /* Configure ILO based on settings from Clock DWR */
 132   1              CY_SET_REG8((void CYXDATA *)(CYREG_SLOWCLK_ILO_CR0), 0x02u);
 133   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_CR), 0x08u);
 134   1      
 135   1              /* Configure IMO based on settings from Clock DWR */
 136   1              CY_SET_REG8((void CYXDATA *)(CYREG_FASTCLK_IMO_CR), 0x03u);
 137   1              CY_SET_REG8((void CYXDATA *)(CYREG_IMO_TR1), (CY_GET_XTND_REG8((void CYFAR *)CYREG_FLSHID_CUST_TABLES_IMO
             -_3MHZ)));
 138   1      
 139   1              /* Configure PLL based on settings from Clock DWR */
 140   1              CY_SET_XTND_REG16((void CYFAR *)(CYREG_FASTCLK_PLL_P), 0x0008u);
 141   1              CY_SET_XTND_REG16((void CYFAR *)(CYREG_FASTCLK_PLL_CFG0), 0x1251u);
 142   1              /* Wait up to 250us for the PLL to lock */
 143   1              pllLock = 0u;
 144   1              for (timeout = 250u / 10u; (timeout > 0u) && (pllLock != 0x03u); timeout--)
 145   1              { 
 146   2                      pllLock = 0x03u & ((uint8)((uint8)pllLock << 1) | ((CY_GET_REG8((void CYXDATA *)CYREG_FASTCLK_PLL_SR) & 
             -0x01u) >> 0));
 147   2                      CyDelayCycles(10u * 48u); /* Delay 10us based on 48MHz clock */
 148   2              }
 149   1              /* If we ran out of time the PLL didn't lock so go to the error function */
 150   1              if (timeout == 0u)
 151   1              {
 152   2                      CyClockStartupError(CYCLOCKSTART_PLL_ERROR);
 153   2              }
 154   1      
 155   1              /* Configure Bus/Master Clock based on settings from Clock DWR */
 156   1              CY_SET_XTND_REG16((void CYFAR *)(CYREG_CLKDIST_MSTR0), 0x0100u);
 157   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_MSTR0), 0x07u);
 158   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_BCFG0), 0x00u);
 159   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_BCFG2), 0x48u);
 160   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_MSTR0), 0x00u);
 161   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_LD), 0x02u);
 162   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_DLY1), 0x04u);
 163   1      
 164   1              CY_SET_REG8((void CYXDATA *)(CYREG_PM_ACT_CFG2), ((CY_GET_REG8((void CYXDATA *)CYREG_PM_ACT_CFG2) | 0x01u
             -)));
 165   1              CY_SET_REG8((void CYXDATA *)(CYREG_PM_ACT_CFG1), ((CY_GET_REG8((void CYXDATA *)CYREG_PM_ACT_CFG1) | 0x01u
             -)));
 166   1              CY_SET_REG8((void CYXDATA *)(CYREG_PM_ACT_CFG0), ((CY_GET_REG8((void CYXDATA *)CYREG_PM_ACT_CFG0) | 0x80u
             -)));
 167   1      }
 168          
 169          
 170          /* Analog API Functions */
 171          
C51 COMPILER V9.51   CYFITTER_CFG                                                          02/11/2014 14:11:28 PAGE 4   

 172          
 173          /*******************************************************************************
 174          * Function Name: AnalogSetDefault
 175          ********************************************************************************
 176          *
 177          * Summary:
 178          *  Sets up the analog portions of the chip to default values based on chip
 179          *  configuration options from the project.
 180          *
 181          * Parameters:
 182          *  void
 183          *
 184          * Return:
 185          *  void
 186          *
 187          *******************************************************************************/
 188          static void AnalogSetDefault(void);
 189          static void AnalogSetDefault(void)
 190          {
 191   1              uint8 bg_xover_inl_trim = CY_GET_XTND_REG8((void CYFAR *)(CYREG_FLSHID_MFG_CFG_BG_XOVER_INL_TRIM + 1u));
 192   1              CY_SET_REG8((void CYXDATA *)(CYREG_BG_DFT0), (bg_xover_inl_trim & 0x07u));
 193   1              CY_SET_REG8((void CYXDATA *)(CYREG_BG_DFT1), ((bg_xover_inl_trim >> 4) & 0x0Fu));
 194   1              CY_SET_REG16((void CYXDATA *)CYREG_PRT0_AMUX, 0xA002u);
 195   1              CY_SET_REG8((void CYXDATA *)CYREG_PRT2_AG, 0x20u);
 196   1              CY_SET_REG8((void CYXDATA *)CYREG_BG_CR0, 0x09u);
 197   1              CY_SET_REG8((void CYXDATA *)CYREG_SC0_SW0, 0x02u);
 198   1              CY_SET_REG8((void CYXDATA *)CYREG_SC0_SW4, 0x10u);
 199   1              CY_SET_REG8((void CYXDATA *)CYREG_SC0_SW8, 0x08u);
 200   1              CY_SET_REG8((void CYXDATA *)CYREG_DAC0_SW3, 0x01u);
 201   1              CY_SET_REG8((void CYXDATA *)CYREG_DAC2_SW0, 0x20u);
 202   1              CY_SET_REG8((void CYXDATA *)CYREG_CMP0_SW3, 0x40u);
 203   1              CY_SET_REG8((void CYXDATA *)CYREG_CMP0_SW4, 0x10u);
 204   1              CY_SET_REG8((void CYXDATA *)CYREG_DSM0_SW0, 0x08u);
 205   1              CY_SET_REG8((void CYXDATA *)CYREG_DSM0_SW3, 0x40u);
 206   1              CY_SET_REG8((void CYXDATA *)CYREG_DSM0_SW4, 0x80u);
 207   1              CY_SET_REG16((void CYXDATA *)CYREG_OPAMP0_MX, 0x0210u);
 208   1              CY_SET_REG8((void CYXDATA *)CYREG_PUMP_CR0, 0x44u);
 209   1      }
 210          
 211          
 212          /*******************************************************************************
 213          * Function Name: SetAnalogRoutingPumps
 214          ********************************************************************************
 215          *
 216          * Summary:
 217          * Enables or disables the analog pumps feeding analog routing switches.
 218          * Intended to be called at startup, based on the Vdda system configuration;
 219          * may be called during operation when the user informs us that the Vdda voltage
 220          * crossed the pump threshold.
 221          *
 222          * Parameters:
 223          *  enabled - 1 to enable the pumps, 0 to disable the pumps
 224          *
 225          * Return:
 226          *  void
 227          *
 228          *******************************************************************************/
 229          void SetAnalogRoutingPumps(uint8 enabled)
 230          {
 231   1              uint8 regValue = CY_GET_REG8((void CYXDATA *)CYREG_PUMP_CR0);
 232   1              if (enabled != 0u)
 233   1              {
C51 COMPILER V9.51   CYFITTER_CFG                                                          02/11/2014 14:11:28 PAGE 5   

 234   2                      regValue |= 0x22u;
 235   2              }
 236   1              else
 237   1              {
 238   2                      regValue &= (uint8)~0x22u;
 239   2              }
 240   1              CY_SET_REG8((void CYXDATA *)CYREG_PUMP_CR0, regValue);
 241   1      }
 242          
 243          #define CY_AMUX_UNUSED CYREG_BOOST_SR
 244          /*******************************************************************************
 245          * Function Name: ADC_DelSig_1_AMux_Set
 246          ********************************************************************************
 247          * Summary:
 248          *  This function is used to set a particular channel as active on the AMux.
 249          *
 250          * Parameters:  
 251          *   channel - The mux channel input to set as active
 252          *
 253          * Return:
 254          *   void
 255          *
 256          *******************************************************************************/
 257          void ADC_DelSig_1_AMux_Set(uint8 channel)
 258          {
 259   1              if (channel) {} /* Mux has no inputs, thus no switches to modify */
 260   1      }
 261          
 262          /*******************************************************************************
 263          * Function Name: ADC_DelSig_1_AMux_Unset
 264          ********************************************************************************
 265          * Summary:
 266          *  This function is used to clear a particular channel from being active on the
 267          *  AMux.
 268          *
 269          * Parameters:  
 270          *   channel - The mux channel input to mark inactive
 271          *
 272          * Return:
 273          *   void
 274          *
 275          *******************************************************************************/
 276          void ADC_DelSig_1_AMux_Unset(uint8 channel)
 277          {
 278   1              if (channel) {} /* Mux has no inputs, thus no switches to modify */
 279   1      }
 280          
 281          
 282          
 283          /*******************************************************************************
 284          * Function Name: cyfitter_cfg
 285          ********************************************************************************
 286          * Summary:
 287          *  This function is called by the start-up code for the selected device. It
 288          *  performs all of the necessary device configuration based on the design
 289          *  settings.  This includes settings from the Design Wide Resources (DWR) such
 290          *  as Clocks and Pins as well as any component configuration that is necessary.
 291          *
 292          * Parameters:  
 293          *   void
 294          *
 295          * Return:
C51 COMPILER V9.51   CYFITTER_CFG                                                          02/11/2014 14:11:28 PAGE 6   

 296          *   void
 297          *
 298          *******************************************************************************/
 299          
 300          void cyfitter_cfg(void)
 301          {
 302   1              /* Enable/Disable Debug functionality based on settings from System DWR */
 303   1              CY_SET_XTND_REG8((void CYFAR *)CYREG_MLOGIC_DEBUG, (CY_GET_XTND_REG8((void CYFAR *)CYREG_MLOGIC_DEBUG) | 
             -0x05u));
 304   1      
 305   1              {
 306   2      
 307   2                      CYPACKED typedef struct {
 308   2                              void CYFAR *address;
 309   2                              uint16 size;
 310   2                      } CYPACKED_ATTR cfg_memset_t;
 311   2      
 312   2                      static const cfg_memset_t CYCODE cfg_memset_list [] = {
 313   2                              /* address, size */
 314   2                              {(void CYFAR *)(CYREG_PRT1_DR), 16u},
 315   2                              {(void CYFAR *)(CYREG_PRT3_DR), 64u},
 316   2                              {(void CYFAR *)(CYREG_PRT12_DR), 16u},
 317   2                              {(void CYFAR *)(CYREG_PRT15_DR), 16u},
 318   2                              {(void CYFAR *)(CYDEV_UCFG_B0_P0_U0_BASE), 4096u},
 319   2                              {(void CYFAR *)(CYDEV_UCFG_B1_P2_U0_BASE), 2048u},
 320   2                              {(void CYFAR *)(CYDEV_UCFG_DSI0_BASE), 2560u},
 321   2                              {(void CYFAR *)(CYDEV_UCFG_DSI12_BASE), 512u},
 322   2                              {(void CYFAR *)(CYREG_BCTL0_MDCLK_EN), 32u},
 323   2                      };
 324   2      
 325   2                      uint8 CYDATA i;
 326   2      
 327   2                      /* Zero out critical memory blocks before beginning configuration */
 328   2                      for (i = 0u; i < (sizeof(cfg_memset_list)/sizeof(cfg_memset_list[0])); i++)
 329   2                      {
 330   3                              const cfg_memset_t CYCODE * CYDATA ms = &cfg_memset_list[i];
 331   3                              CYMEMZERO(ms->address, ms->size);
 332   3                      }
 333   2      
 334   2                      cfg_write_bytes(cfg_byte_table);
 335   2      
 336   2                      /* Perform normal device configuration. Order is not critical for these items. */
 337   2                      CY_SET_REG8((void CYXDATA *)(CYREG_DSM0_CR3), 0x0Au);
 338   2      
 339   2                      /* Enable digital routing */
 340   2                      CY_SET_XTND_REG8((void CYFAR *)CYREG_BCTL0_BANK_CTL, CY_GET_XTND_REG8((void CYFAR *)CYREG_BCTL0_BANK_CTL
             -) | 0x02u);
 341   2                      CY_SET_XTND_REG8((void CYFAR *)CYREG_BCTL1_BANK_CTL, CY_GET_XTND_REG8((void CYFAR *)CYREG_BCTL1_BANK_CTL
             -) | 0x02u);
 342   2      
 343   2                      /* Enable UDB array */
 344   2                      CY_SET_REG8((void CYXDATA *)CYREG_PM_ACT_CFG0, CY_GET_REG8((void CYXDATA *)CYREG_PM_ACT_CFG0) | 0x40u);
 345   2                      CY_SET_REG8((void CYXDATA *)CYREG_PM_AVAIL_CR2, CY_GET_REG8((void CYXDATA *)CYREG_PM_AVAIL_CR2) | 0x10u)
             -;
 346   2              }
 347   1      
 348   1              /* Perform second pass device configuration. These items must be configured in specific order after the r
             -egular configuration is done. */
 349   1              CYCONFIGCPY((void CYFAR *)(CYREG_PRT0_DM0), (const void CYFAR *)(BS_IOPINS0_0_VAL), 8u);
 350   1              CYCONFIGCPY((void CYFAR *)(CYREG_PRT2_DM0), (const void CYFAR *)(BS_IOPINS0_2_VAL), 8u);
 351   1              CY_SET_REG8((void CYXDATA *)(CYREG_INTC_CSR_EN), 0x01u);
 352   1      
C51 COMPILER V9.51   CYFITTER_CFG                                                          02/11/2014 14:11:28 PAGE 7   

 353   1              /* Switch Boost to the precision bandgap reference from its internal reference */
 354   1              CY_SET_REG8((void CYXDATA *)CYREG_BOOST_CR2, (CY_GET_REG8((void CYXDATA *)CYREG_BOOST_CR2) | 0x08u));
 355   1              if (CYDEV_CHIP_REV_ACTUAL < 5u)
 356   1              {
 357   2                      CY_SET_REG8((void CYXDATA *)CYREG_PWRSYS_WAKE_TR2, 0x3Au);
 358   2              }
 359   1      
 360   1      
 361   1              /* Set Flash Cycles based on max possible frequency in case a glitch occurs during ClockSetup(). */
 362   1              CY_SET_REG8((void CYXDATA *)(CYREG_CACHE_CR), (((CYDEV_INSTRUCT_CACHE_ENABLED) != 0) ? 0xF1u : 0xC0u));
 363   1              /* Setup clocks based on selections from Clock DWR */
 364   1              ClockSetup();
 365   1              /* Set Flash Cycles based on newly configured 24.00MHz Bus Clock. */
 366   1              CY_SET_REG8((void CYXDATA *)(CYREG_CACHE_CR), (((CYDEV_INSTRUCT_CACHE_ENABLED) != 0) ? 0xB1u : 0x80u));
 367   1      
 368   1              /* Perform basic analog initialization to defaults */
 369   1              AnalogSetDefault();
 370   1      
 371   1              /* Configure alternate active mode */
 372   1              CYCONFIGCPY((void CYFAR *)CYDEV_PM_STBY_BASE, (const void CYFAR *)CYDEV_PM_ACT_BASE, 14u);
 373   1              CY_SET_REG8((void CYXDATA *)CYREG_PM_STBY_CFG0, CY_GET_REG8((void CYXDATA *)CYREG_PM_STBY_CFG0) & (uint8)
             -~0x02u);        /* Disable CPU */
 374   1      }
C51 COMPILER V9.51   CYFITTER_CFG                                                          02/11/2014 14:11:28 PAGE 8   

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION _CyClockStartupError (BEGIN)
                                           ; SOURCE LINE # 71
0000 900000      R     MOV     DPTR,#errorCode
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 72
                                           ; SOURCE LINE # 74
0005 900000      R     MOV     DPTR,#errorCode
0008 E0                MOVX    A,@DPTR
0009 FF                MOV     R7,A
000A 900000      R     MOV     DPTR,#errorCode
000D EF                MOV     A,R7
000E F0                MOVX    @DPTR,A
000F         ?C0001:
                                           ; SOURCE LINE # 86
000F 80FE              SJMP    ?C0001
0011 22                RET     
             ; FUNCTION _CyClockStartupError (END)

             ; FUNCTION ClockSetup (BEGIN)
                                           ; SOURCE LINE # 118
                                           ; SOURCE LINE # 119
                                           ; SOURCE LINE # 125
0000 7B00              MOV     R3,#00H
0002 7A40              MOV     R2,#040H
0004 7980              MOV     R1,#080H
0006 7D00              MOV     R5,#00H
0008 7C00              MOV     R4,#00H
000A 120000      E     LCALL   _cywrite16
                                           ; SOURCE LINE # 126
000D 904082            MOV     DPTR,#04082H
0010 7450              MOV     A,#050H
0012 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 129
0013 7B08              MOV     R3,#08H
0015 7A00              MOV     R2,#00H
0017 798C              MOV     R1,#08CH
0019 C003              PUSH    AR3
001B C002              PUSH    AR2
001D C001              PUSH    AR1
001F 7B00              MOV     R3,#00H
0021 7A41              MOV     R2,#041H
0023 7900              MOV     R1,#00H
0025 900000      E     MOV     DPTR,#?_cyconfigcpy?BYTE+05H
0028 120000      E     LCALL   ?C?PSTXDATA
002B D001              POP     AR1
002D D002              POP     AR2
002F D003              POP     AR3
0031 7F04              MOV     R7,#04H
0033 7E00              MOV     R6,#00H
0035 120000      E     LCALL   _cyconfigcpy
                                           ; SOURCE LINE # 132
0038 904300            MOV     DPTR,#04300H
003B 7402              MOV     A,#02H
003D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 133
003E 904000            MOV     DPTR,#04000H
0041 7408              MOV     A,#08H
0043 F0                MOVX    @DPTR,A
C51 COMPILER V9.51   CYFITTER_CFG                                                          02/11/2014 14:11:28 PAGE 9   

                                           ; SOURCE LINE # 136
0044 904200            MOV     DPTR,#04200H
0047 7403              MOV     A,#03H
0049 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 137
004A 7B0C              MOV     R3,#0CH
004C 7A01              MOV     R2,#01H
004E 7908              MOV     R1,#08H
0050 120000      E     LCALL   _cyread8
0053 9046A1            MOV     DPTR,#046A1H
0056 EF                MOV     A,R7
0057 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 140
0058 7B00              MOV     R3,#00H
005A 7A42              MOV     R2,#042H
005C 7922              MOV     R1,#022H
005E 7D08              MOV     R5,#08H
0060 7C00              MOV     R4,#00H
0062 120000      E     LCALL   _cywrite16
                                           ; SOURCE LINE # 141
0065 7B00              MOV     R3,#00H
0067 7A42              MOV     R2,#042H
0069 7920              MOV     R1,#020H
006B 7D51              MOV     R5,#051H
006D 7C12              MOV     R4,#012H
006F 120000      E     LCALL   _cywrite16
                                           ; SOURCE LINE # 143
0072 900000      R     MOV     DPTR,#pllLock
0075 E4                CLR     A
0076 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 144
0077 7F19              MOV     R7,#019H
0079 7E00              MOV     R6,#00H
007B 7D00              MOV     R5,#00H
007D 7C00              MOV     R4,#00H
007F 900000      R     MOV     DPTR,#timeout
0082 120000      E     LCALL   ?C?LSTXDATA
0085         ?C0004:
0085 900000      R     MOV     DPTR,#timeout
0088 120000      E     LCALL   ?C?LLDXDATA
008B D3                SETB    C
008C EF                MOV     A,R7
008D 9400              SUBB    A,#00H
008F EE                MOV     A,R6
0090 9400              SUBB    A,#00H
0092 404E              JC      ?C0005
0094 900000      R     MOV     DPTR,#pllLock
0097 E0                MOVX    A,@DPTR
0098 FF                MOV     R7,A
0099 EF                MOV     A,R7
009A 6403              XRL     A,#03H
009C 6044              JZ      ?C0005
                                           ; SOURCE LINE # 145
                                           ; SOURCE LINE # 146
009E 904225            MOV     DPTR,#04225H
00A1 E0                MOVX    A,@DPTR
00A2 FF                MOV     R7,A
00A3 EF                MOV     A,R7
00A4 5401              ANL     A,#01H
00A6 FF                MOV     R7,A
00A7 7E00              MOV     R6,#00H
00A9 900000      R     MOV     DPTR,#pllLock
C51 COMPILER V9.51   CYFITTER_CFG                                                          02/11/2014 14:11:28 PAGE 10  

00AC E0                MOVX    A,@DPTR
00AD FE                MOV     R6,A
00AE EE                MOV     A,R6
00AF 25E0              ADD     A,ACC
00B1 FE                MOV     R6,A
00B2 EE                MOV     A,R6
00B3 4F                ORL     A,R7
00B4 FF                MOV     R7,A
00B5 EF                MOV     A,R7
00B6 5403              ANL     A,#03H
00B8 FF                MOV     R7,A
00B9 900000      R     MOV     DPTR,#pllLock
00BC EF                MOV     A,R7
00BD F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 147
00BE 7FE0              MOV     R7,#0E0H
00C0 7E01              MOV     R6,#01H
00C2 7D00              MOV     R5,#00H
00C4 7C00              MOV     R4,#00H
00C6 120000      E     LCALL   _CyDelayCycles
                                           ; SOURCE LINE # 148
00C9 900000      R     MOV     DPTR,#timeout
00CC 120000      E     LCALL   ?C?LLDXDATA
00CF 7BFF              MOV     R3,#0FFH
00D1 7AFF              MOV     R2,#0FFH
00D3 79FF              MOV     R1,#0FFH
00D5 78FF              MOV     R0,#0FFH
00D7 120000      E     LCALL   ?C?LADD
00DA 900000      R     MOV     DPTR,#timeout
00DD 120000      E     LCALL   ?C?LSTXDATA
00E0 80A3              SJMP    ?C0004
00E2         ?C0005:
                                           ; SOURCE LINE # 150
00E2 900000      R     MOV     DPTR,#timeout
00E5 120000      E     LCALL   ?C?LLDXDATA
00E8 EF                MOV     A,R7
00E9 4E                ORL     A,R6
00EA 7005              JNZ     ?C0007
                                           ; SOURCE LINE # 151
                                           ; SOURCE LINE # 152
00EC 7F03              MOV     R7,#03H
00EE 120000      R     LCALL   _CyClockStartupError
                                           ; SOURCE LINE # 153
00F1         ?C0007:
                                           ; SOURCE LINE # 156
00F1 7B00              MOV     R3,#00H
00F3 7A40              MOV     R2,#040H
00F5 7904              MOV     R1,#04H
00F7 7D00              MOV     R5,#00H
00F9 7C01              MOV     R4,#01H
00FB 120000      E     LCALL   _cywrite16
                                           ; SOURCE LINE # 157
00FE 904004            MOV     DPTR,#04004H
0101 7407              MOV     A,#07H
0103 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 158
0104 904006            MOV     DPTR,#04006H
0107 E4                CLR     A
0108 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 159
0109 904008            MOV     DPTR,#04008H
010C 7448              MOV     A,#048H
C51 COMPILER V9.51   CYFITTER_CFG                                                          02/11/2014 14:11:28 PAGE 11  

010E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 160
010F 904004            MOV     DPTR,#04004H
0112 E4                CLR     A
0113 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 161
0114 904001            MOV     DPTR,#04001H
0117 7402              MOV     A,#02H
0119 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 162
011A 90400B            MOV     DPTR,#0400BH
011D 7404              MOV     A,#04H
011F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 164
0120 9043A2            MOV     DPTR,#043A2H
0123 E0                MOVX    A,@DPTR
0124 FF                MOV     R7,A
0125 EF                MOV     A,R7
0126 4401              ORL     A,#01H
0128 FF                MOV     R7,A
0129 9043A2            MOV     DPTR,#043A2H
012C EF                MOV     A,R7
012D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 165
012E 9043A1            MOV     DPTR,#043A1H
0131 E0                MOVX    A,@DPTR
0132 FF                MOV     R7,A
0133 EF                MOV     A,R7
0134 4401              ORL     A,#01H
0136 FF                MOV     R7,A
0137 9043A1            MOV     DPTR,#043A1H
013A EF                MOV     A,R7
013B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 166
013C 9043A0            MOV     DPTR,#043A0H
013F E0                MOVX    A,@DPTR
0140 FF                MOV     R7,A
0141 EF                MOV     A,R7
0142 4480              ORL     A,#080H
0144 FF                MOV     R7,A
0145 9043A0            MOV     DPTR,#043A0H
0148 EF                MOV     A,R7
0149 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 167
014A 22                RET     
             ; FUNCTION ClockSetup (END)

             ; FUNCTION AnalogSetDefault (BEGIN)
                                           ; SOURCE LINE # 189
                                           ; SOURCE LINE # 190
                                           ; SOURCE LINE # 191
0000 7B0C              MOV     R3,#0CH
0002 7A01              MOV     R2,#01H
0004 79CF              MOV     R1,#0CFH
0006 120000      E     LCALL   _cyread8
0009 900000      R     MOV     DPTR,#bg_xover_inl_trim
000C EF                MOV     A,R7
000D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 192
000E 900000      R     MOV     DPTR,#bg_xover_inl_trim
0011 E0                MOVX    A,@DPTR
0012 FF                MOV     R7,A
C51 COMPILER V9.51   CYFITTER_CFG                                                          02/11/2014 14:11:28 PAGE 12  

0013 EF                MOV     A,R7
0014 5407              ANL     A,#07H
0016 FF                MOV     R7,A
0017 90586E            MOV     DPTR,#0586EH
001A EF                MOV     A,R7
001B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 193
001C 900000      R     MOV     DPTR,#bg_xover_inl_trim
001F E0                MOVX    A,@DPTR
0020 FF                MOV     R7,A
0021 EF                MOV     A,R7
0022 C4                SWAP    A
0023 540F              ANL     A,#0FH
0025 FF                MOV     R7,A
0026 EF                MOV     A,R7
0027 540F              ANL     A,#0FH
0029 FF                MOV     R7,A
002A 90586F            MOV     DPTR,#0586FH
002D EF                MOV     A,R7
002E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 194
002F 7B02              MOV     R3,#02H
0031 7A51              MOV     R2,#051H
0033 790C              MOV     R1,#0CH
0035 7D02              MOV     R5,#02H
0037 7CA0              MOV     R4,#0A0H
0039 120000      E     LCALL   _cywrite16_nodpx
                                           ; SOURCE LINE # 195
003C 90512D            MOV     DPTR,#0512DH
003F 7420              MOV     A,#020H
0041 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 196
0042 90586C            MOV     DPTR,#0586CH
0045 7409              MOV     A,#09H
0047 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 197
0048 905A00            MOV     DPTR,#05A00H
004B 7402              MOV     A,#02H
004D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 198
004E 905A04            MOV     DPTR,#05A04H
0051 7410              MOV     A,#010H
0053 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 199
0054 905A08            MOV     DPTR,#05A08H
0057 7408              MOV     A,#08H
0059 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 200
005A 905A83            MOV     DPTR,#05A83H
005D 7401              MOV     A,#01H
005F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 201
0060 905A90            MOV     DPTR,#05A90H
0063 7420              MOV     A,#020H
0065 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 202
0066 905AC3            MOV     DPTR,#05AC3H
0069 7440              MOV     A,#040H
006B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 203
006C 905AC4            MOV     DPTR,#05AC4H
006F 7410              MOV     A,#010H
C51 COMPILER V9.51   CYFITTER_CFG                                                          02/11/2014 14:11:28 PAGE 13  

0071 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 204
0072 905B00            MOV     DPTR,#05B00H
0075 7408              MOV     A,#08H
0077 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 205
0078 905B03            MOV     DPTR,#05B03H
007B 7440              MOV     A,#040H
007D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 206
007E 905B04            MOV     DPTR,#05B04H
0081 7480              MOV     A,#080H
0083 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 207
0084 7B02              MOV     R3,#02H
0086 7A5B              MOV     R2,#05BH
0088 7940              MOV     R1,#040H
008A 7D10              MOV     R5,#010H
008C 7C02              MOV     R4,#02H
008E 120000      E     LCALL   _cywrite16_nodpx
                                           ; SOURCE LINE # 208
0091 905876            MOV     DPTR,#05876H
0094 7444              MOV     A,#044H
0096 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 209
0097 22                RET     
             ; FUNCTION AnalogSetDefault (END)

             ; FUNCTION _SetAnalogRoutingPumps (BEGIN)
                                           ; SOURCE LINE # 229
0000 900000      R     MOV     DPTR,#enabled
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 230
                                           ; SOURCE LINE # 231
0005 905876            MOV     DPTR,#05876H
0008 E0                MOVX    A,@DPTR
0009 FF                MOV     R7,A
000A 900000      R     MOV     DPTR,#regValue
000D EF                MOV     A,R7
000E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 232
000F 900000      R     MOV     DPTR,#enabled
0012 E0                MOVX    A,@DPTR
0013 FF                MOV     R7,A
0014 EF                MOV     A,R7
0015 6010              JZ      ?C0010
                                           ; SOURCE LINE # 233
                                           ; SOURCE LINE # 234
0017 900000      R     MOV     DPTR,#regValue
001A E0                MOVX    A,@DPTR
001B FF                MOV     R7,A
001C EF                MOV     A,R7
001D 4422              ORL     A,#022H
001F FF                MOV     R7,A
0020 900000      R     MOV     DPTR,#regValue
0023 EF                MOV     A,R7
0024 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 235
0025 800E              SJMP    ?C0011
0027         ?C0010:
                                           ; SOURCE LINE # 237
C51 COMPILER V9.51   CYFITTER_CFG                                                          02/11/2014 14:11:28 PAGE 14  

                                           ; SOURCE LINE # 238
0027 900000      R     MOV     DPTR,#regValue
002A E0                MOVX    A,@DPTR
002B FF                MOV     R7,A
002C EF                MOV     A,R7
002D 54DD              ANL     A,#0DDH
002F FF                MOV     R7,A
0030 900000      R     MOV     DPTR,#regValue
0033 EF                MOV     A,R7
0034 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 239
0035         ?C0011:
                                           ; SOURCE LINE # 240
0035 900000      R     MOV     DPTR,#regValue
0038 E0                MOVX    A,@DPTR
0039 FF                MOV     R7,A
003A 905876            MOV     DPTR,#05876H
003D EF                MOV     A,R7
003E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 241
003F 22                RET     
             ; FUNCTION _SetAnalogRoutingPumps (END)

             ; FUNCTION _ADC_DelSig_1_AMux_Set (BEGIN)
                                           ; SOURCE LINE # 257
0000 900000      R     MOV     DPTR,#channel
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 258
                                           ; SOURCE LINE # 259
                                           ; SOURCE LINE # 260
0005         ?C0014:
0005 22                RET     
             ; FUNCTION _ADC_DelSig_1_AMux_Set (END)

             ; FUNCTION _ADC_DelSig_1_AMux_Unset (BEGIN)
                                           ; SOURCE LINE # 276
0000 900000      R     MOV     DPTR,#channel
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 277
                                           ; SOURCE LINE # 278
                                           ; SOURCE LINE # 279
0005         ?C0016:
0005 22                RET     
             ; FUNCTION _ADC_DelSig_1_AMux_Unset (END)

             ; FUNCTION cyfitter_cfg (BEGIN)
                                           ; SOURCE LINE # 300
                                           ; SOURCE LINE # 301
                                           ; SOURCE LINE # 303
0000 7B00              MOV     R3,#00H
0002 7A46              MOV     R2,#046H
0004 79E8              MOV     R1,#0E8H
0006 120000      E     LCALL   _cyread8
0009 EF                MOV     A,R7
000A 4405              ORL     A,#05H
000C FD                MOV     R5,A
000D 7B00              MOV     R3,#00H
000F 7A46              MOV     R2,#046H
0011 79E8              MOV     R1,#0E8H
0013 120000      E     LCALL   _cywrite8
C51 COMPILER V9.51   CYFITTER_CFG                                                          02/11/2014 14:11:28 PAGE 15  

                                           ; SOURCE LINE # 305
                                           ; SOURCE LINE # 328
0016 750000      R     MOV     i,#00H
0019         ?C0017:
0019 E500        R     MOV     A,i
001B C3                CLR     C
001C 9409              SUBB    A,#09H
001E 503A              JNC     ?C0018
                                           ; SOURCE LINE # 329
                                           ; SOURCE LINE # 330
0020 AF00        R     MOV     R7,i
0022 EF                MOV     A,R7
0023 75F005            MOV     B,#05H
0026 A4                MUL     AB
0027 2400        R     ADD     A,#LOW cfg_memset_list
0029 F582              MOV     DPL,A
002B E4                CLR     A
002C 3400        R     ADDC    A,#HIGH cfg_memset_list
002E F583              MOV     DPH,A
0030 AF82              MOV     R7,DPL
0032 AE83              MOV     R6,DPH
0034 8E00        R     MOV     ms,R6
0036 8F00        R     MOV     ms+01H,R7
                                           ; SOURCE LINE # 331
0038 AE00        R     MOV     R6,ms
003A AF00        R     MOV     R7,ms+01H
003C 8F82              MOV     DPL,R7
003E 8E83              MOV     DPH,R6
0040 120000      E     LCALL   ?C?PLDCODE
0043 AE00        R     MOV     R6,ms
0045 AF00        R     MOV     R7,ms+01H
0047 8F82              MOV     DPL,R7
0049 8E83              MOV     DPH,R6
004B 7403              MOV     A,#03H
004D 93                MOVC    A,@A+DPTR
004E FC                MOV     R4,A
004F 7404              MOV     A,#04H
0051 93                MOVC    A,@A+DPTR
0052 FD                MOV     R5,A
0053 120000      E     LCALL   _cymemzero
                                           ; SOURCE LINE # 332
0056 0500        R     INC     i
0058 80BF              SJMP    ?C0017
005A         ?C0018:
                                           ; SOURCE LINE # 334
005A 7B08              MOV     R3,#08H
005C 7A00              MOV     R2,#00H
005E 7900              MOV     R1,#00H
0060 120000      E     LCALL   _cfg_write_bytes
                                           ; SOURCE LINE # 337
0063 905883            MOV     DPTR,#05883H
0066 740A              MOV     A,#0AH
0068 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 340
0069 7B01              MOV     R3,#01H
006B 7A50              MOV     R2,#050H
006D 7903              MOV     R1,#03H
006F 120000      E     LCALL   _cyread8
0072 EF                MOV     A,R7
0073 4402              ORL     A,#02H
0075 FD                MOV     R5,A
0076 7B01              MOV     R3,#01H
C51 COMPILER V9.51   CYFITTER_CFG                                                          02/11/2014 14:11:28 PAGE 16  

0078 7A50              MOV     R2,#050H
007A 7903              MOV     R1,#03H
007C 120000      E     LCALL   _cywrite8
                                           ; SOURCE LINE # 341
007F 7B01              MOV     R3,#01H
0081 7A50              MOV     R2,#050H
0083 7913              MOV     R1,#013H
0085 120000      E     LCALL   _cyread8
0088 EF                MOV     A,R7
0089 4402              ORL     A,#02H
008B FD                MOV     R5,A
008C 7B01              MOV     R3,#01H
008E 7A50              MOV     R2,#050H
0090 7913              MOV     R1,#013H
0092 120000      E     LCALL   _cywrite8
                                           ; SOURCE LINE # 344
0095 9043A0            MOV     DPTR,#043A0H
0098 E0                MOVX    A,@DPTR
0099 FF                MOV     R7,A
009A EF                MOV     A,R7
009B 4440              ORL     A,#040H
009D FF                MOV     R7,A
009E 9043A0            MOV     DPTR,#043A0H
00A1 EF                MOV     A,R7
00A2 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 345
00A3 9043C2            MOV     DPTR,#043C2H
00A6 E0                MOVX    A,@DPTR
00A7 FF                MOV     R7,A
00A8 EF                MOV     A,R7
00A9 4410              ORL     A,#010H
00AB FF                MOV     R7,A
00AC 9043C2            MOV     DPTR,#043C2H
00AF EF                MOV     A,R7
00B0 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 346
                                           ; SOURCE LINE # 349
00B1 7B08              MOV     R3,#08H
00B3 7A00              MOV     R2,#00H
00B5 797C              MOV     R1,#07CH
00B7 C003              PUSH    AR3
00B9 C002              PUSH    AR2
00BB C001              PUSH    AR1
00BD 7B00              MOV     R3,#00H
00BF 7A51              MOV     R2,#051H
00C1 7902              MOV     R1,#02H
00C3 900000      E     MOV     DPTR,#?_cyconfigcpy?BYTE+05H
00C6 120000      E     LCALL   ?C?PSTXDATA
00C9 D001              POP     AR1
00CB D002              POP     AR2
00CD D003              POP     AR3
00CF 7F08              MOV     R7,#08H
00D1 7E00              MOV     R6,#00H
00D3 120000      E     LCALL   _cyconfigcpy
                                           ; SOURCE LINE # 350
00D6 7B08              MOV     R3,#08H
00D8 7A00              MOV     R2,#00H
00DA 7984              MOV     R1,#084H
00DC C003              PUSH    AR3
00DE C002              PUSH    AR2
00E0 C001              PUSH    AR1
00E2 7B00              MOV     R3,#00H
C51 COMPILER V9.51   CYFITTER_CFG                                                          02/11/2014 14:11:28 PAGE 17  

00E4 7A51              MOV     R2,#051H
00E6 7922              MOV     R1,#022H
00E8 900000      E     MOV     DPTR,#?_cyconfigcpy?BYTE+05H
00EB 120000      E     LCALL   ?C?PSTXDATA
00EE D001              POP     AR1
00F0 D002              POP     AR2
00F2 D003              POP     AR3
00F4 7F08              MOV     R7,#08H
00F6 7E00              MOV     R6,#00H
00F8 120000      E     LCALL   _cyconfigcpy
                                           ; SOURCE LINE # 351
00FB 9044F4            MOV     DPTR,#044F4H
00FE 7401              MOV     A,#01H
0100 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 354
0101 904322            MOV     DPTR,#04322H
0104 E0                MOVX    A,@DPTR
0105 FF                MOV     R7,A
0106 EF                MOV     A,R7
0107 4408              ORL     A,#08H
0109 FF                MOV     R7,A
010A 904322            MOV     DPTR,#04322H
010D EF                MOV     A,R7
010E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 355
010F 9046EC            MOV     DPTR,#046ECH
0112 E0                MOVX    A,@DPTR
0113 FF                MOV     R7,A
0114 EF                MOV     A,R7
0115 C3                CLR     C
0116 9405              SUBB    A,#05H
0118 5006              JNC     ?C0020
                                           ; SOURCE LINE # 356
                                           ; SOURCE LINE # 357
011A 904689            MOV     DPTR,#04689H
011D 743A              MOV     A,#03AH
011F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 358
0120         ?C0020:
                                           ; SOURCE LINE # 362
0120 904800            MOV     DPTR,#04800H
0123 74F1              MOV     A,#0F1H
0125 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 364
0126 120000      R     LCALL   ClockSetup
                                           ; SOURCE LINE # 366
0129 904800            MOV     DPTR,#04800H
012C 74B1              MOV     A,#0B1H
012E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 369
012F 120000      R     LCALL   AnalogSetDefault
                                           ; SOURCE LINE # 372
0132 7B00              MOV     R3,#00H
0134 7A43              MOV     R2,#043H
0136 79A0              MOV     R1,#0A0H
0138 C003              PUSH    AR3
013A C002              PUSH    AR2
013C C001              PUSH    AR1
013E 7B00              MOV     R3,#00H
0140 7A43              MOV     R2,#043H
0142 79B0              MOV     R1,#0B0H
0144 900000      E     MOV     DPTR,#?_cyconfigcpy?BYTE+05H
C51 COMPILER V9.51   CYFITTER_CFG                                                          02/11/2014 14:11:28 PAGE 18  

0147 120000      E     LCALL   ?C?PSTXDATA
014A D001              POP     AR1
014C D002              POP     AR2
014E D003              POP     AR3
0150 7F0E              MOV     R7,#0EH
0152 7E00              MOV     R6,#00H
0154 120000      E     LCALL   _cyconfigcpy
                                           ; SOURCE LINE # 373
0157 9043B0            MOV     DPTR,#043B0H
015A E0                MOVX    A,@DPTR
015B FF                MOV     R7,A
015C EF                MOV     A,R7
015D 54FD              ANL     A,#0FDH
015F FF                MOV     R7,A
0160 EF                MOV     A,R7
0161 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 374
0162 22                RET     
             ; FUNCTION cyfitter_cfg (END)



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    932    ----
   CONSTANT SIZE    =     45    ----
   XDATA SIZE       =   ----      11
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       3
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
