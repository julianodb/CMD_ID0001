C51 COMPILER V9.51   FILTER_1_PM                                                           02/11/2014 14:11:35 PAGE 1   


C51 COMPILER V9.51, COMPILATION OF MODULE FILTER_1_PM
OBJECT MODULE PLACED IN .\DP8051\DP8051_Keil_951\Debug\Filter_1_PM.obj
COMPILER INVOKED BY: C:\Program Files\Cypress\PSoC Creator\3.0\PSoC Creator\import\keil\pk51\9.51\C51\BIN\c51.exe .\Gene
                    -rated_Source\PSoC3\Filter_1_PM.c NOIV LARGE MODDP2 OMF2 VB(1) PR(.\DP8051\DP8051_Keil_951\Debug\Filter_1_PM.lst) CD DB N
                    -OIP OT(2,SIZE) DF(DEBUG) INCDIR(.,.\Generated_Source\PSoC3) OJ(.\DP8051\DP8051_Keil_951\Debug\Filter_1_PM.obj)

line level    source

   1          /*******************************************************************************
   2          * File Name: Filter_1_PM.c
   3          * Version 2.20
   4          *
   5          * Description:
   6          *  This file provides the power managaer API source code for the FILT component.
   7          *
   8          * Note:
   9          *  
  10          *******************************************************************************
  11          * Copyright 2008-2013, Cypress Semiconductor Corporation.  All rights reserved.
  12          * You may use this file only in accordance with the license, terms, conditions, 
  13          * disclaimers, and limitations in the end user license agreement accompanying 
  14          * the software package with which this file was provided.
  15          ********************************************************************************/
  16          
  17          #include "Filter_1_PVT.h"
  18          
  19          static Filter_1_backupStruct  Filter_1_backup = 
  20          {
  21              Filter_1_DISABLED,
  22              Filter_1_RUN_MASK,
  23              
  24          };
  25          
  26          
  27          /*******************************************************************************
  28          * Function Name: Filter_1_SaveConfig
  29          ********************************************************************************
  30          *
  31          * Summary:
  32          *  Saves the current user configuration.
  33          *  
  34          * Parameters:  
  35          *  void
  36          *
  37          * Return: 
  38          *  void
  39          *
  40          * Global variables:
  41          *  Filter_1_backup:  This global structure variable is used to store 
  42          *  configuration registers which are non retention whenever user wants to go 
  43          *  sleep mode by calling Sleep() API.
  44          *
  45          *******************************************************************************/
  46          void Filter_1_SaveConfig(void) 
  47          {
  48   1          Filter_1_backup.cr = Filter_1_CR_REG;
  49   1          Filter_1_backup.sr = Filter_1_SR_REG;
  50   1          Filter_1_backup.sema = Filter_1_SEMA_REG;
  51   1      
  52   1          /* Put DFB RAM on the bus */
  53   1          Filter_1_RAM_DIR_REG = Filter_1_RAM_DIR_BUS;
C51 COMPILER V9.51   FILTER_1_PM                                                           02/11/2014 14:11:35 PAGE 2   

  54   1      
  55   1          /* Save the ACU RAM as this is not retension */
  56   1          (void)memcpy(Filter_1_backup.saveAcu,
  57   1              Filter_1_ACU_RAM, Filter_1_ACU_RAM_SIZE); 
  58   1      
  59   1          /* Take DFB RAM off the bus */
  60   1          Filter_1_RAM_DIR_REG = Filter_1_RAM_DIR_DFB;
  61   1      }
  62          
  63          
  64          /*******************************************************************************
  65          * Function Name: Filter_1_RestoreConfig
  66          ********************************************************************************
  67          *
  68          * Summary:
  69          *  Restores the current user configuration.
  70          *
  71          * Parameters:  
  72          *  void
  73          *
  74          * Return: 
  75          *  void
  76          *
  77          * Global variables:
  78          *  Filter_1_backup:  This global structure variable is used to restore 
  79          *  configuration registers which are non retention whenever user wants to switch 
  80          *  to active power mode by calling Wakeup() API.
  81          *
  82          *******************************************************************************/
  83          void Filter_1_RestoreConfig(void) 
  84          {
  85   1          Filter_1_CR_REG = Filter_1_backup.cr;
  86   1          Filter_1_SR_REG = Filter_1_backup.sr;
  87   1          Filter_1_SEMA_REG = Filter_1_backup.sema;
  88   1          
  89   1          /* Power on DFB before initializing the RAMs */
  90   1          Filter_1_PM_ACT_CFG_REG |= Filter_1_PM_ACT_MSK;
  91   1      
  92   1          /* Put DFB RAM on the bus */
  93   1          Filter_1_RAM_DIR_REG = Filter_1_RAM_DIR_BUS;
  94   1      
  95   1          /* Restore ACU RAM as this is not retension */
  96   1          (void)memcpy(Filter_1_ACU_RAM,
  97   1              Filter_1_backup.saveAcu, Filter_1_ACU_RAM_SIZE); 
  98   1      
  99   1          /* Take DFB RAM off the bus */
 100   1          Filter_1_RAM_DIR_REG = Filter_1_RAM_DIR_DFB;
 101   1      }
 102          
 103          
 104          /*******************************************************************************
 105          * Function Name: Filter_1_Sleep
 106          ********************************************************************************
 107          *
 108          * Summary:
 109          *  Disables block's operation and saves its configuration. Should be called 
 110          *  just prior to entering sleep.
 111          *  
 112          * Parameters:  
 113          *  void
 114          *
 115          * Return: 
C51 COMPILER V9.51   FILTER_1_PM                                                           02/11/2014 14:11:35 PAGE 3   

 116          *  void
 117          *
 118          * Global variables:
 119          *  Filter_1_backup:  The structure field 'enableState' is modified 
 120          *  depending on the enable state of the block before entering to sleep mode.
 121          *
 122          *******************************************************************************/
 123          void Filter_1_Sleep(void) 
 124          {
 125   1          /* Save Filter enable state */
 126   1          if(Filter_1_PM_ACT_MSK == (Filter_1_PM_ACT_CFG_REG & Filter_1_PM_ACT_MSK))
 127   1          {
 128   2              /* Component is enabled */
 129   2              Filter_1_backup.enableState = Filter_1_ENABLED;
 130   2          }
 131   1          else
 132   1          {
 133   2              /* Component is disabled */
 134   2              Filter_1_backup.enableState = Filter_1_DISABLED;
 135   2          }
 136   1      
 137   1          /* Save the configuration */
 138   1          Filter_1_SaveConfig();
 139   1          
 140   1          /* Stop the component */
 141   1          Filter_1_Stop();
 142   1      }
 143          
 144          
 145          /*******************************************************************************
 146          * Function Name: Filter_1_Wakeup
 147          ********************************************************************************
 148          *
 149          * Summary:
 150          *  Enables block's operation and restores its configuration. Should be called
 151          *  just after awaking from sleep.
 152          *  
 153          * Parameters:  
 154          *  void
 155          *
 156          * Return: 
 157          *  void
 158          *
 159          * Global variables:
 160          *  Filter_1_backup:  The structure field 'enableState' is used to 
 161          *  restore the enable state of block after wakeup from sleep mode.
 162          *
 163          *******************************************************************************/
 164          void Filter_1_Wakeup(void) 
 165          {
 166   1          /* Restore the configuration */
 167   1          Filter_1_RestoreConfig();
 168   1          
 169   1          /* Enable's the component operation */
 170   1          if(Filter_1_backup.enableState == Filter_1_ENABLED)
 171   1          {
 172   2              Filter_1_Enable();
 173   2          } /* Do nothing if component was disable before */
 174   1      }
 175          
 176          
 177          /* [] END OF FILE */
C51 COMPILER V9.51   FILTER_1_PM                                                           02/11/2014 14:11:35 PAGE 4   

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION Filter_1_SaveConfig (BEGIN)
                                           ; SOURCE LINE # 46
                                           ; SOURCE LINE # 47
                                           ; SOURCE LINE # 48
0000 90C780            MOV     DPTR,#0C780H
0003 E0                MOVX    A,@DPTR
0004 FF                MOV     R7,A
0005 900000      R     MOV     DPTR,#Filter_1_backup+01H
0008 EF                MOV     A,R7
0009 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 49
000A 90C784            MOV     DPTR,#0C784H
000D E0                MOVX    A,@DPTR
000E FF                MOV     R7,A
000F 900000      R     MOV     DPTR,#Filter_1_backup+02H
0012 EF                MOV     A,R7
0013 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 50
0014 90C790            MOV     DPTR,#0C790H
0017 E0                MOVX    A,@DPTR
0018 FF                MOV     R7,A
0019 900000      R     MOV     DPTR,#Filter_1_backup+03H
001C EF                MOV     A,R7
001D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 53
001E 90C78C            MOV     DPTR,#0C78CH
0021 743F              MOV     A,#03FH
0023 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 57
0024 7B01              MOV     R3,#01H
0026 7AC7              MOV     R2,#0C7H
0028 7900              MOV     R1,#00H
002A C003              PUSH    AR3
002C C002              PUSH    AR2
002E C001              PUSH    AR1
0030 7B01              MOV     R3,#01H
0032 7A00        R     MOV     R2,#HIGH Filter_1_backup+04H
0034 7900        R     MOV     R1,#LOW Filter_1_backup+04H
0036 A801              MOV     R0,AR1
0038 AC02              MOV     R4,AR2
003A AD03              MOV     R5,AR3
003C D001              POP     AR1
003E D002              POP     AR2
0040 D003              POP     AR3
0042 7E00              MOV     R6,#00H
0044 7F40              MOV     R7,#040H
0046 120000      E     LCALL   ?C?COPYAMD
                                           ; SOURCE LINE # 60
0049 90C78C            MOV     DPTR,#0C78CH
004C E4                CLR     A
004D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 61
004E 22                RET     
             ; FUNCTION Filter_1_SaveConfig (END)

             ; FUNCTION Filter_1_RestoreConfig (BEGIN)
                                           ; SOURCE LINE # 83
                                           ; SOURCE LINE # 84
                                           ; SOURCE LINE # 85
C51 COMPILER V9.51   FILTER_1_PM                                                           02/11/2014 14:11:35 PAGE 5   

0000 900000      R     MOV     DPTR,#Filter_1_backup+01H
0003 E0                MOVX    A,@DPTR
0004 FF                MOV     R7,A
0005 90C780            MOV     DPTR,#0C780H
0008 EF                MOV     A,R7
0009 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 86
000A 900000      R     MOV     DPTR,#Filter_1_backup+02H
000D E0                MOVX    A,@DPTR
000E FF                MOV     R7,A
000F 90C784            MOV     DPTR,#0C784H
0012 EF                MOV     A,R7
0013 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 87
0014 900000      R     MOV     DPTR,#Filter_1_backup+03H
0017 E0                MOVX    A,@DPTR
0018 FF                MOV     R7,A
0019 90C790            MOV     DPTR,#0C790H
001C EF                MOV     A,R7
001D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 90
001E 9043A6            MOV     DPTR,#043A6H
0021 E0                MOVX    A,@DPTR
0022 FF                MOV     R7,A
0023 EF                MOV     A,R7
0024 4410              ORL     A,#010H
0026 FF                MOV     R7,A
0027 EF                MOV     A,R7
0028 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 93
0029 90C78C            MOV     DPTR,#0C78CH
002C 743F              MOV     A,#03FH
002E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 97
002F 7B01              MOV     R3,#01H
0031 7A00        R     MOV     R2,#HIGH Filter_1_backup+04H
0033 7900        R     MOV     R1,#LOW Filter_1_backup+04H
0035 C003              PUSH    AR3
0037 C002              PUSH    AR2
0039 C001              PUSH    AR1
003B 7B01              MOV     R3,#01H
003D 7AC7              MOV     R2,#0C7H
003F 7900              MOV     R1,#00H
0041 A801              MOV     R0,AR1
0043 AC02              MOV     R4,AR2
0045 AD03              MOV     R5,AR3
0047 D001              POP     AR1
0049 D002              POP     AR2
004B D003              POP     AR3
004D 7E00              MOV     R6,#00H
004F 7F40              MOV     R7,#040H
0051 120000      E     LCALL   ?C?COPYAMD
                                           ; SOURCE LINE # 100
0054 90C78C            MOV     DPTR,#0C78CH
0057 E4                CLR     A
0058 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 101
0059 22                RET     
             ; FUNCTION Filter_1_RestoreConfig (END)

             ; FUNCTION Filter_1_Sleep (BEGIN)
                                           ; SOURCE LINE # 123
C51 COMPILER V9.51   FILTER_1_PM                                                           02/11/2014 14:11:35 PAGE 6   

                                           ; SOURCE LINE # 124
                                           ; SOURCE LINE # 126
0000 9043A6            MOV     DPTR,#043A6H
0003 E0                MOVX    A,@DPTR
0004 FF                MOV     R7,A
0005 EF                MOV     A,R7
0006 5410              ANL     A,#010H
0008 FF                MOV     R7,A
0009 7E00              MOV     R6,#00H
000B EF                MOV     A,R7
000C 6410              XRL     A,#010H
000E 4E                ORL     A,R6
000F 7008              JNZ     ?C0003
                                           ; SOURCE LINE # 127
                                           ; SOURCE LINE # 129
0011 900000      R     MOV     DPTR,#Filter_1_backup
0014 7401              MOV     A,#01H
0016 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 130
0017 8005              SJMP    ?C0004
0019         ?C0003:
                                           ; SOURCE LINE # 132
                                           ; SOURCE LINE # 134
0019 900000      R     MOV     DPTR,#Filter_1_backup
001C E4                CLR     A
001D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 135
001E         ?C0004:
                                           ; SOURCE LINE # 138
001E 120000      R     LCALL   Filter_1_SaveConfig
                                           ; SOURCE LINE # 141
0021 120000      E     LCALL   Filter_1_Stop
                                           ; SOURCE LINE # 142
0024 22                RET     
             ; FUNCTION Filter_1_Sleep (END)

             ; FUNCTION Filter_1_Wakeup (BEGIN)
                                           ; SOURCE LINE # 164
                                           ; SOURCE LINE # 165
                                           ; SOURCE LINE # 167
0000 120000      R     LCALL   Filter_1_RestoreConfig
                                           ; SOURCE LINE # 170
0003 900000      R     MOV     DPTR,#Filter_1_backup
0006 E0                MOVX    A,@DPTR
0007 FF                MOV     R7,A
0008 EF                MOV     A,R7
0009 B40103            CJNE    A,#01H,?C0007
                                           ; SOURCE LINE # 171
                                           ; SOURCE LINE # 172
000C 120000      E     LCALL   Filter_1_Enable
                                           ; SOURCE LINE # 173
                                           ; SOURCE LINE # 174
000F         ?C0007:
000F 22                RET     
             ; FUNCTION Filter_1_Wakeup (END)



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    222    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =     68    ----
C51 COMPILER V9.51   FILTER_1_PM                                                           02/11/2014 14:11:35 PAGE 7   

   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
